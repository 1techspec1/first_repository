# Сoздание туториала по GIT

Ссылка на [Справочные материалы по Markdown](https://learn.microsoft.com/ru-ru/contribute/how-to-write-links)



1. Чтобы изменить комментарий/фиксацию/commit: **git commit --amend -m "new commit"** (при этом запись о первом коммите остается и ее можно увидеть через комманду **git reflog**)

2. **git stash** - отменяет последние изменения, но если они не зафиксированны

## Как создать локальный репозиторий

```fix
git init
```

## Как добавить файл на отслеживание:

```fix
git add .
```

## Возврат к определенной фиксации, которая будет считаться нулевой *(через git log будет прослеживаться новая ветка коммитов, а через git reflog видна абсолютно вся история фиксаций)*

```fix
git reset commit_number

git reset --soft commit_number

gir reset --hard commit_number
```

## Переключение между коммитами:

```fix
git checkout commit_number
```
*Так последующие изменения файла пойдут по ветке выбранного коммита, то есть c момента определенного/нужного коммита*

*Для возврата к главной ветке (master):*

```fix
git checkout master
```

Удалить файл:

```fix
git rm <имя файла>
```
Удалить папку:

```fix
git rm -r <имя_папки>
```

## Ошибка в имени ветки <branch> - исправляем

```fix
git branch <wrong_name>

git branch -m <wrong_name> <wright_name>
```
## Показ ветвления

```fix
git log --graph
```

# Руководство по Markdown





## Раздел 1 - Заголовки











## Раздел 2 - Списки












## Раздел 3 - Исходный код







## Раздел 4 - Таблицы

